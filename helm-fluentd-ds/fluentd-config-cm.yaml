apiVersion: v1
data:
  01_sources.conf: |-
    ## logs from podman
    <source>
      @type tail
      @id in_tail_container_logs
      path /var/log/containers/*.log
      pos_file /var/log/fluentd-containers.log.pos
      tag kubernetes.*
      read_from_head true
      <parse>
        @type multi_format
        <pattern>
          format json
          time_key time
          time_type string
          time_format "%Y-%m-%dT%H:%M:%S.%NZ"
          keep_time_key false
        </pattern>
        <pattern>
          format regexp
          expression /^(?<time>.+) (?<stream>stdout|stderr)( (.))? (?<message>.*)$/
          time_format '%Y-%m-%dT%H:%M:%S.%NZ'
          keep_time_key false
        </pattern>
      </parse>
      emit_unmatched_lines true
    </source>

  02_filters.conf: |-
      <filter kubernetes.**>
        @type kubernetes_metadata
        @id filter_kube_metadata
        skip_labels false
        skip_container_metadata false
        skip_namespace_metadata true
        skip_master_url true
      </filter>
  
  03_filters_kube_logs.conf: |-
    <filter kubernetes.**>
      @type record_transformer
      enable_ruby true
      <record>
        namespace_name ${record["kubernetes"]["namespace_name"]}
      </record>
    </filter>

    # retag based on the namespace name of the log message
    # Update the tag have a structure of namespace_name   
    <match kubernetes.**>
      @type rewrite_tag_filter
      <rule> 
        key $.namespace_name
        pattern ^(.+)$ 
        tag $1
      </rule>
    </match>

    # Remove the unnecessary field as the information is already available on other fields.
    <filter kube-**>
      @type record_transformer
      remove_keys $.namespace_name
    </filter>

    # # Parse logs of core kube- components(pods) using the kubernetes formatter.
    # <filter kube-**>
    #   @type parser
    #   format kubernetes
    #   reserve_data true
    #   key_name message
    #   suppress_parse_error_log true
    # </filter>
        
    
  04_outputs.conf: |-
    <match {elastic-kibana,app1,bookinfo}>
      @type forward
      <server>
        # Aggregator host
        host fluentd-dep.logging.svc.cluster.local
        port 24224
      </server>
        # use longer flush_interval to reduce CPU usage, 
        # note that this is a trade-off against latency.
      <buffer>
        flush_interval 60s
      </buffer>      
    </match> 

kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: fluentd-agent
    meta.helm.sh/release-namespace: agent
  labels:
    app.kubernetes.io/instance: fluentd-agent
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/version: v1.12.4
    helm.sh/chart: fluentd-0.3.5
  name: fluentd-config
  namespace: agent

